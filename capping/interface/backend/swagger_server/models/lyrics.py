# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Lyrics(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, songid: str=None, lyrics: str=None):  # noqa: E501
        """Lyrics - a model defined in Swagger

        :param songid: The songid of this Lyrics.  # noqa: E501
        :type songid: str
        :param lyrics: The lyrics of this Lyrics.  # noqa: E501
        :type lyrics: str
        """
        self.swagger_types = {
            'songid': str,
            'lyrics': str
        }

        self.attribute_map = {
            'songid': 'songid',
            'lyrics': 'lyrics'
        }

        self._songid = songid
        self._lyrics = lyrics

    @classmethod
    def from_dict(cls, dikt) -> 'Lyrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The lyrics of this Lyrics.  # noqa: E501
        :rtype: Lyrics
        """
        return util.deserialize_model(dikt, cls)

    @property
    def songid(self) -> str:
        """Gets the songid of this Lyrics.


        :return: The songid of this Lyrics.
        :rtype: str
        """
        return self._songid

    @songid.setter
    def songid(self, songid: str):
        """Sets the songid of this Lyrics.


        :param songid: The songid of this Lyrics.
        :type songid: str
        """

        self._songid = songid

    @property
    def lyrics(self) -> str:
        """Gets the lyrics of this Lyrics.


        :return: The lyrics of this Lyrics.
        :rtype: str
        """
        return self._lyrics

    @lyrics.setter
    def lyrics(self, lyrics: str):
        """Sets the lyrics of this Lyrics.


        :param lyrics: The lyrics of this Lyrics.
        :type lyrics: str
        """
        if lyrics is not None and len(lyrics) > 75000:
            raise ValueError("Invalid value for `lyrics`, length must be less than or equal to `75000`")  # noqa: E501
        if lyrics is not None and len(lyrics) < 0:
            raise ValueError("Invalid value for `lyrics`, length must be greater than or equal to `0`")  # noqa: E501

        self._lyrics = lyrics
